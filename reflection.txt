Reflection
	With the blackjack program, I for the first time went through and wrote tests for
each part of my program. Prior to this program, my testing was very limited. It usually 
consisted of basic input tests for the section of the program I would be working on at a 
given time. I would run good and bad inputs based on particular outputs that I would be 
expecting. I never thought about testing all branches of my code or  about  any criteria 
whatsoever. My testing mostly consisted of what I could think of at the moment.
	This has come to haunt me in a project I have been working on. I have had bugs 
pop up every now and then. Nothing too serious but I know more will pop up as I move 
on with this project. I know I will find myself wishing I should have had some sort of 
testing plan with this project. So now that I have learned more about testing and the 
various ways of doing it, I will definitely be making test collections for future projects. I 
will also start a test collection with this current project.
	For the most part, I am a Beizer level 4 thinker. I clearly see how any one 
program will never be bug free.I understand that it is about the quality of testing and that 
quality testing can give you quality software. Learning from our mistakes is crucial and I 
understand how important that can be in software development. 
	I might have to work on Beizer level 3 thinking. I can see that it would be very 
frustrating to work with testers who are constantly telling you that your code needs 
improvement. Iâ€™d like to think that I would take all comments as constructive criticism 
and I definitely understand the importance of testers and developers working together. I 
think I would have no problem in this area but until I actually walk the mile, I do not want 
to claim Beizer level 3 thinking.
	I can bring the mindframe that the quality of testing is crucial. I of course, before 
put little thought into how I tested so my personal projects suffered. I will now put much 
more thought into what and how I test. I will also now think about which tests I should be 
using with a given job.

